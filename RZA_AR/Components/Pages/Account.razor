﻿@using RZA_AR.utilities
@using RZA_AR.Services
@using RZA_AR.Models
@inject UserSession UserSession
@inject RoomService RoomService
@inject RoombookingService RoombookingService
@inject CustomerService CustomerService
@inject NavigationManager NavigationManager

@rendermode InteractiveServer

@page "/Account"


<h3>Account</h3>

<div class="account-page">
    <h3 class="account-title">Account: <i class="bi bi-paw-fill"></i></h3>
    <div class="account-container">
        <img src="https://t3.ftcdn.net/jpg/00/26/71/82/240_F_26718274_TBMn85NCXbriCSYoJFvR31bA20eatZjD.jpg" alt="armadillo image" class="background-image">
        <div class="form-overlay">
            <button class="account-button">
                <button class="account-button" @onclick="ShowUserId">Show User ID</button>
            </button>

                <button class="account-button">
                    <button @onclick=Logout>Log Out</button>
                </button>
                
        </div>
    </div>
</div>


<style>
    .account-page {
        font-family: Arial, sans-serif;
        color: white;
        text-align: left;
        padding: 20px;
        background-color: #a7cc4b;
    }

    .account-title {
        margin-bottom: 10px;
        font-weight: bold;
        font-size: 50px;
    }

    .account-container {
        position: relative;
        max-width: 800px;
        margin: auto;
        background-color: #a7cc4b;
        border-radius: 15px;
        overflow: hidden;
        margin-top: 15px;
    }

    .background-image {
        width: 100%;
        height: auto;
        display: block;
    }

    .form-overlay {
        position: absolute;
        top: 20px;
        left: 20px;
        background-color: rgba(0, 70, 0, 0.6); /*Dark green with transparency */
        padding: 20px;
        border-radius: 10px;
        width: 250px;
    }

    .form-group {
        margin-bottom: 15px;
        background-color: white;
        border-radius: 10px;
        margin-top: 15px;
    }

    .account-button {
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #007E42; 
        border: none;
        padding: 5px 10px;
        border-radius: 5px;
        cursor: pointer;
        font-weight: bold;
    }

    .my-bookings-button {
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #007E42;
        border: none;
        padding: 10px 15px;
        border-radius: 5px;
        cursor: pointer;
        font-weight: bold;
        margin-top: 15px;
    }

    /*these 2 sections change how a normally blue link looks*/
    .my-bookings-button a {
        color: #30F2FC;
        text-decoration: none; /* Optional: Remove underline from the link */
    }

    .my-bookings-button a:hover {
        text-decoration: underline; /* adds underline to the link when hovered over */
    }

</style>



@code {
    private Customer customer;
    private List<Room> rooms;

    private DateOnly startDate;

    private Room Room;
    private int Roomnumber;
    private int Days;

    private bool loaded = false;

    protected override async Task OnInitializedAsync()
    {
        rooms = await RoomService.GetRoomsAsync();
        if (UserSession.UserId == 0)
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            customer = await CustomerService.GetCustomerFromIdAsync(UserSession.UserId);
        }
    }

    private async Task ShowUserId()
    {
        Console.WriteLine(UserSession.UserId); // Retrieve server-side user ID
    }
    private async Task Logout()
    {
        UserSession.UserId = 0;
        NavigationManager.NavigateTo("/");
    }
    private async Task SetRoom()
    {

    }
    private async Task BookRoom()
    {
        Console.WriteLine(Roomnumber);
        Room = await RoomService.GetRoomAsync(Roomnumber);
        await RoombookingService.AddRoombookingAsync(customer, Room, startDate, Days);

    }
}